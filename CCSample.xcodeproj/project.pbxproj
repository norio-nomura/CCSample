// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		OBJ_28 /* CCommonCrypto.m in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* CCommonCrypto.m */; };
		OBJ_35 /* CCSample.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* CCSample.swift */; };
		OBJ_37 /* CCommonCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* CCommonCrypto.framework */; };
		OBJ_44 /* CCSampleTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* CCSampleTests.swift */; };
		OBJ_46 /* CCommonCrypto.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* CCommonCrypto.framework */; };
		OBJ_47 /* CCSample.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* CCSample.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		6C1216ED1E71387C00813053 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_22;
			remoteInfo = CCommonCrypto;
		};
		6C1216EE1E71387C00813053 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_22;
			remoteInfo = CCommonCrypto;
		};
		6C1216EF1E71387C00813053 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_30;
			remoteInfo = CCSample;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_11 /* CCommonCrypto.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CCommonCrypto.h; sourceTree = "<group>"; };
		OBJ_14 /* CCSample.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CCSample.swift; sourceTree = "<group>"; };
		OBJ_17 /* CCSampleTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CCSampleTests.swift; sourceTree = "<group>"; };
		OBJ_19 /* CCommonCrypto.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = CCommonCrypto.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_20 /* CCSample.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CCSample.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_21 /* CCSampleTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CCSampleTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* CCommonCrypto.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = CCommonCrypto.m; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_29 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_36 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_37 /* CCommonCrypto.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_45 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_46 /* CCommonCrypto.framework in Frameworks */,
				OBJ_47 /* CCSample.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_10 /* include */ = {
			isa = PBXGroup;
			children = (
				OBJ_11 /* CCommonCrypto.h */,
			);
			path = include;
			sourceTree = "<group>";
		};
		OBJ_13 /* CCSample */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* CCSample.swift */,
			);
			name = CCSample;
			path = Sources/CCSample;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_15 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* CCSampleTests */,
			);
			path = Tests;
			sourceTree = "<group>";
		};
		OBJ_16 /* CCSampleTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* CCSampleTests.swift */,
			);
			name = CCSampleTests;
			path = Tests/CCSampleTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_18 /* Products */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* CCommonCrypto.framework */,
				OBJ_20 /* CCSample.framework */,
				OBJ_21 /* CCSampleTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_15 /* Tests */,
				OBJ_18 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* CCommonCrypto */,
				OBJ_13 /* CCSample */,
			);
			path = Sources;
			sourceTree = "<group>";
		};
		OBJ_8 /* CCommonCrypto */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* CCommonCrypto.m */,
				OBJ_10 /* include */,
			);
			name = CCommonCrypto;
			path = Sources/CCommonCrypto;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		OBJ_22 /* CCommonCrypto */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_23 /* Build configuration list for PBXNativeTarget "CCommonCrypto" */;
			buildPhases = (
				OBJ_26 /* ShellScript */,
				OBJ_27 /* Sources */,
				OBJ_29 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CCommonCrypto;
			productName = CCommonCrypto;
			productReference = OBJ_19 /* CCommonCrypto.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_30 /* CCSample */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_31 /* Build configuration list for PBXNativeTarget "CCSample" */;
			buildPhases = (
				OBJ_34 /* Sources */,
				OBJ_36 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_38 /* PBXTargetDependency */,
			);
			name = CCSample;
			productName = CCSample;
			productReference = OBJ_20 /* CCSample.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_39 /* CCSampleTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_40 /* Build configuration list for PBXNativeTarget "CCSampleTests" */;
			buildPhases = (
				OBJ_43 /* Sources */,
				OBJ_45 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_48 /* PBXTargetDependency */,
				OBJ_49 /* PBXTargetDependency */,
			);
			name = CCSampleTests;
			productName = CCSampleTests;
			productReference = OBJ_21 /* CCSampleTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "CCSample" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_18 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				OBJ_22 /* CCommonCrypto */,
				OBJ_30 /* CCSample */,
				OBJ_39 /* CCSampleTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		OBJ_26 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "mkdir -p \"${PROJECT_TEMP_DIR}/SymlinkLibs\"\nln -sf \"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_PATH}\" \"${PROJECT_TEMP_DIR}/SymlinkLibs/lib${EXECUTABLE_NAME}.dylib\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_27 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_28 /* CCommonCrypto.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_34 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_35 /* CCSample.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_43 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_44 /* CCSampleTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_38 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_22 /* CCommonCrypto */;
			targetProxy = 6C1216ED1E71387C00813053 /* PBXContainerItemProxy */;
		};
		OBJ_48 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_22 /* CCommonCrypto */;
			targetProxy = 6C1216EE1E71387C00813053 /* PBXContainerItemProxy */;
		};
		OBJ_49 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_30 /* CCSample */;
			targetProxy = 6C1216EF1E71387C00813053 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_24 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCommonCrypto_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CCommonCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				TARGET_NAME = CCommonCrypto;
			};
			name = Debug;
		};
		OBJ_25 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCommonCrypto_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CCommonCrypto;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				TARGET_NAME = CCommonCrypto;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_32 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCSample_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = "$(PROJECT_TEMP_DIR)/SymlinkLibs/";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CCSample;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				TARGET_NAME = CCSample;
			};
			name = Debug;
		};
		OBJ_33 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCSample_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = "$(PROJECT_TEMP_DIR)/SymlinkLibs/";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = CCSample;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				TARGET_NAME = CCSample;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				SWIFT_VERSION = 3.0;
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_41 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCSampleTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = "$(PROJECT_TEMP_DIR)/SymlinkLibs/";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = CCSampleTests;
			};
			name = Debug;
		};
		OBJ_42 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					Sources/CCommonCrypto/include,
				);
				INFOPLIST_FILE = CCSample.xcodeproj/CCSampleTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				LIBRARY_SEARCH_PATHS = "$(PROJECT_TEMP_DIR)/SymlinkLibs/";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				TARGET_NAME = CCSampleTests;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "CCSample" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_23 /* Build configuration list for PBXNativeTarget "CCommonCrypto" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_24 /* Debug */,
				OBJ_25 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_31 /* Build configuration list for PBXNativeTarget "CCSample" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_32 /* Debug */,
				OBJ_33 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_40 /* Build configuration list for PBXNativeTarget "CCSampleTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_41 /* Debug */,
				OBJ_42 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
